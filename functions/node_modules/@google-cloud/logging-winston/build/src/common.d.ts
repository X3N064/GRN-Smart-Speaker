import * as types from './types/core';
declare type Callback = (err: Error, apiResponse: {}) => void;
/*!
 * Log entry data key to allow users to indicate a trace for the request.
 */
export declare const LOGGING_TRACE_KEY = "logging.googleapis.com/trace";
export declare class LoggingCommon {
    readonly logName: string;
    private inspectMetadata;
    private levels;
    stackdriverLog: types.StackdriverLog;
    private resource;
    private serviceContext;
    private prefix;
    private labels;
    static readonly LOGGING_TRACE_KEY = "logging.googleapis.com/trace";
    constructor(options?: types.Options);
    log(level: string, message: string, metadata: MetadataArg | undefined, callback: Callback): void;
}
declare type MetadataArg = {
    stack?: {};
    /**
     * set httpRequest to a http.clientRequest object to log it
     */
    httpRequest?: types.HttpRequest;
    labels?: {};
    timestamp?: {};
    logName?: string;
} & {
    [key: string]: string | {};
};
export {};
