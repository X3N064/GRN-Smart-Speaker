/*!
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { CallOptions } from 'google-gax';
import { CreateSinkCallback, CreateSinkRequest, DeleteCallback, DeleteResponse, Logging, LogSink } from '.';
export interface SinkMetadataCallback {
    (error: Error | null, response?: LogSink): void;
}
export declare type SinkMetadataResponse = [LogSink];
export interface SetSinkMetadata extends LogSink {
    gaxOptions?: CallOptions;
}
/**
 * A sink is an object that lets you to specify a set of log entries to export
 * to a particular destination. Stackdriver Logging lets you export log entries
 * to destinations including Cloud Storage buckets (for long term log
 * storage), Google BigQuery datasets (for log analysis), Google Pub/Sub (for
 * streaming to other applications).
 *
 * @see [Introduction to Sinks]{@link https://cloud.google.com/logging/docs/basic-concepts#sinks}
 *
 * @class
 *
 * @param {Logging} logging {@link Logging} instance.
 * @param {string} name Name of the sink.
 *
 * @example
 * const {Logging} = require('@google-cloud/logging');
 * const logging = new Logging();
 * const sink = logging.sink('my-sink');
 */
declare class Sink {
    logging: Logging;
    name: string;
    formattedName_: string;
    metadata?: LogSink;
    constructor(logging: Logging, name: string);
    create(config: CreateSinkRequest): Promise<[Sink, LogSink]>;
    create(config: CreateSinkRequest, callback: CreateSinkCallback): void;
    delete(gaxOptions?: CallOptions): Promise<DeleteResponse>;
    delete(callback: DeleteCallback): void;
    delete(gaxOptions: CallOptions, callback: DeleteCallback): void;
    getMetadata(gaxOptions?: CallOptions): Promise<SinkMetadataResponse>;
    getMetadata(callback: SinkMetadataCallback): void;
    getMetadata(gaxOptions: CallOptions, callback: SinkMetadataCallback): void;
    setFilter(filter: string): Promise<SinkMetadataResponse>;
    setFilter(filter: string, callback: SinkMetadataCallback): void;
    setMetadata(metadata: SetSinkMetadata): Promise<SinkMetadataResponse>;
    setMetadata(metadata: SetSinkMetadata, callback: SinkMetadataCallback): void;
}
/**
 * Reference to the {@link Sink} class.
 * @name module:@google-cloud/logging.Sink
 * @see Sink
 */
export { Sink };
